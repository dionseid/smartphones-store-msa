info:
  app:
    description: Config Server registerd in Eureka Server
    name: gateway-service
    version: 1.0.0

management:
  info:
    env:
      enabled: true
  endpoints:
    web:
      exposure:
        include: health,info,gateway

server:
  port: 8080

spring:
  cloud:
    gateway:
      default-filters:
        - name: CountFilter
        - name: LogFilter
        - name: TokenRelay
      routes:
        - id: accountRoute # ❓ Esta sección equivale al SecurityContext?
            # Contiene toda la información del usuarie autenticade,
            # información que se utilizará para los chequeos de seguridad.
            # Tiene información suficiente para dar soporte de OAuth contra un app desktop o de consola
            # En nuestro caso, una web con requests, tenemos que validar cada unx
          filters: # ❓ Está bien añadir el siguiente filtro en esta sección?
            - RemoveRequestHeader=Cookie # ❓ Para qué sirve?
          predicates:
            - Path=/account/**
          uri: http://localhost:8080/
        - id: backendRoute
          predicates:
            - Path=/backend/**
          uri: http://localhost:8081/
        - id: frontendRoute
          predicates:
            - Path=/frontend/**
          uri: http://localhost:8082/
  eureka:
    client:
      service-url:
        defaultZone: http://localhost:8761/eureka
  security:
    oauth2:
      client:
        provider:
          google:
            issuer-uri: https://accounts.google.com
        registration:
          google:
            client-id: 289408327288-v6tu33ao50n4simk8qr21lspcadskdc7.apps.googleusercontent.com
            client-secret: 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 # De esta manera se autentica este servidor
              # con un cuenta de Google
            redirect-uri: http://localhost:8080/login/oauth2/code/google
            scope: openid